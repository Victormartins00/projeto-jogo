import java.util.Random;
import java.util.Scanner;

enum TipoTerreno {
    FLORESTA, SAVANA, PANTANO, DESERTO, JOGADOR, VAZIO, ASTERISCO
}

public class Mapa {
    private TipoTerreno[][] matriz;
    private int linhas;
    private int colunas;
    private int posXJogador;
    private int posYJogador;
    private int recursosColetados;
    private Scanner scanner;

    public Mapa(int linhas, int colunas) {
        this.linhas = linhas;
        this.colunas = colunas;
        this.matriz = new TipoTerreno[linhas][colunas];
        this.scanner = new Scanner(System.in);
        this.recursosColetados = 0;
    }

    public void inicializarMapa() {
        preencherBordas();
        preencherMapaAleatorio();
        inicializarPosicaoJogador();
        imprimirMapa();
    }

    private void preencherBordas() {
        for (int i = 0; i < linhas; i++) {
            for (int j = 0; j < colunas; j++) {
                if (i == 0 || i == linhas - 1 || j == 0 || j == colunas - 1) {
                    matriz[i][j] = TipoTerreno.ASTERISCO;
                } else {
                    matriz[i][j] = TipoTerreno.VAZIO;
                }
            }
        }
    }

    private void preencherMapaAleatorio() {
        Random random = new Random();

        for (int i = 1; i < linhas - 1; i++) {
            for (int j = 1; j < colunas - 1; j++) {
                matriz[i][j] = TipoTerreno.values()[random.nextInt(TipoTerreno.values().length - 3)];
            }
        }
    }

    private void inicializarPosicaoJogador() {
        posXJogador = linhas / 2;
        posYJogador = colunas / 2;
        matriz[posXJogador][posYJogador] = TipoTerreno.JOGADOR;
    }

    public void imprimirMapa() {
        System.out.println("\nMapa:");
        for (int i = 0; i < linhas; i++) {
            for (int j = 0; j < colunas; j++) {
                System.out.print(matriz[i][j].toString().charAt(0) + " ");
            }
            System.out.println();
        }
    }

    public void moverJogador() {
        System.out.println("Mova o jogador: W A S D");
        String movimento = scanner.nextLine();

        int novaPosXJogador = posXJogador;
        int novaPosYJogador = posYJogador;

        switch (movimento.toLowerCase()) {
            case "a":
                novaPosYJogador = Math.max(posYJogador - 1, 1); // Evitar borda
                break;
            case "d":
                novaPosYJogador = Math.min(posYJogador + 1, colunas - 2); // Evitar borda
                break;
            case "w":
                novaPosXJogador = Math.max(posXJogador - 1, 1); // Evitar borda
                break;
            case "s":
                novaPosXJogador = Math.min(posXJogador + 1, linhas - 2); // Evitar borda
                break;
        }

        if (matriz[novaPosXJogador][novaPosYJogador] == TipoTerreno.FLORESTA) {
            recursosColetados++;
            System.out.println("Recurso coletado! Total de recursos: " + recursosColetados);
        }

        matriz[posXJogador][posYJogador] = TipoTerreno.VAZIO;
        posXJogador = novaPosXJogador;
        posYJogador = novaPosYJogador;
        matriz[posXJogador][posYJogador] = TipoTerreno.JOGADOR;

        imprimirMapa();
    }
}
